from django.core.management.base import BaseCommand
from django.conf import settings
from telebot import types
import pytz
import datetime

from bot.management.commands.config import bot, GROUP_EDUCATIONAL, GROUPADMIN, GROUPDIRECTOR



# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
keyboardStart = types.ReplyKeyboardMarkup(resize_keyboard=True)
keyboardCancel = types.ReplyKeyboardMarkup(resize_keyboard=True)
keyboardRedirect = types.InlineKeyboardMarkup()
keyboardGoIt = types.InlineKeyboardMarkup()
keyboardGoAffter = types.InlineKeyboardMarkup()

# –ö–Ω–æ–ø–∫–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞—Ö
btn_admin= types.KeyboardButton("–ü–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É –°–∏—Å.–ê–¥–º–∏–Ω–∞–º üë®‚Äçüíª")
btn_director = types.KeyboardButton("–í–æ–ø—Ä–æ—Å –¥–∏—Ä–µ–∫—Ç–æ—Ä—É üòé")
btn_educational = types.KeyboardButton("–í–æ–ø—Ä–æ—Å —É—á–µ–±–Ω–æ–π —á–∞—Å—Ç–∏ üë©‚Äçüè´")
btn_committee = types.KeyboardButton("–í–æ–ø—Ä–æ—Å –ø—Ä–∏–µ–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏ üßë‚Äçüíº")
btnCancel = types.KeyboardButton("üö´ –û—Ç–º–µ–Ω–∏—Ç—å")


keyboardStart.add(btn_admin, btn_director)
keyboardStart.add(btn_educational, btn_committee)
keyboardCancel.add(btnCancel)



@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.from_user.id, "{0}, —Ä–∞–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–µ <b>TOP Helper | –ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫</b>".format(message.from_user.first_name), parse_mode='html')
    bot.send_message(message.from_user.id, "–°–¥–µ–ª–∞–π—Ç–µ –≤—ã–±–æ—Ä —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫ –≤–Ω–∏–∑—É", reply_markup=keyboardStart)

@bot.message_handler(commands=['help'])
def help(message):
    text = "–ü–µ—Ä–µ–¥ –æ–ø—Ä–∞–≤–∫–æ–π —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ç–∫–æ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ —É —Å–µ–±—è –≤ –≥–æ–ª–æ–≤–µ –≤–æ–ø—Ä–æ—Å\n –ø–æ—Å–ª–µ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ—Å—å –≤ –∫–∞–∫–æ–π –æ—Ç–¥–µ–ª TOP –≤–∞–º –Ω–∞–¥–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
    bot.send_message(chat_id=message.from_user.id, text=text, parse_mode="html")


@bot.message_handler(content_types=['text'])
def get_message(message):
    if message.text == "–ü–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É –°–∏—Å.–ê–¥–º–∏–Ω–∞–º üë®‚Äçüíª":
        bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏ –º–Ω–µ –∑–∞–¥–∞—á—É –∏ —è –æ—Ç–ø—Ä–∞–≤–ª—é –µ—ë –≤ —á–∞—Ç —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤", reply_markup=keyboardCancel)
        bot.register_next_step_handler(message, set_task_admin) 
    elif message.text == "–í–æ–ø—Ä–æ—Å –¥–∏—Ä–µ–∫—Ç–æ—Ä—É üòé":
        bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∏ —è –æ—Ç–ø—Ä–∞–≤–ª—é –ø—Ä—è–º–∏–∫–æ–º –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä—É", reply_markup=keyboardCancel)
        bot.register_next_step_handler(message, question_director)
    elif message.text == "–í–æ–ø—Ä–æ—Å —É—á–µ–±–Ω–æ–π —á–∞—Å—Ç–∏ üë©‚Äçüè´":
        bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∏ —è –æ—Ç–ø—Ä–∞–≤–ª—é –≤ —á–∞—Ç —É—á–µ–±–Ω–æ–π —á–∞—Å—Ç–∏", reply_markup=keyboardCancel)
        bot.register_next_step_handler(message, question_educational_part) 
    elif message.text == "–í–æ–ø—Ä–æ—Å –ø—Ä–∏–µ–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏ üßë‚Äçüíº":
        bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∏ —è –æ—Ç–ø—Ä–∞–≤–ª—é –µ–≥–æ –≤ —á–∞—Ç –ø—Ä–∏–µ–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏", reply_markup=keyboardCancel)
        bot.register_next_step_handler(message, question_selection_committee) 
    else:
        bot.send_message(message.from_user.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –í–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é... –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏", reply_markup=keyboardStart)


def set_task_admin(message):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª —Å–∏—Å –∞–¥–º–∏–Ω–æ–≤"""
    if message.text == "üö´ –û—Ç–º–µ–Ω–∏—Ç—å":
        """–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–¥—É–º–∞–ª –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª"""
        bot.send_message(message.from_user.id, "–î–∞–π—Ç–µ –∑–Ω–∞—Ç—å –µ—Å–ª–∏ –µ—â–µ —á—Ç–æ —Ç–æ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è", reply_markup=keyboardStart)
        bot.register_next_step_handler(message, get_message)
    else:
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –∏ –∑–∞–Ω—É–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö"""
        tz = pytz.timezone('Asia/Bangkok')
        now = datetime.datetime.now(tz)
        time_str = now.strftime('%Y-%m-%d %H:%M:%S')
        text = f"–ó–∞–¥–∞—á–∞ –æ—Ç {message.from_user.username}:\n<b>–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–¥–∞—á–∏:</b> {time_str}\n<b>–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏/–ø—Ä–æ–±–ª–µ–º—ã</b>:{message.text}\n\n–°—Å—ã–ª–∫–∞ –Ω–∞ –µ–≥–æ TG: https://t.me/{message.from_user.username}"
        bot.send_message(GROUPADMIN, text, parse_mode='html')
        bot.send_message(message.from_user.id, "–í–∞—à–∞ –∑–∞–¥–∞—á–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ —á–∞—Ç —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤", reply_markup=keyboardStart)
        bot.register_next_step_handler(message, get_message)



def question_director(message):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª —Å –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–º"""
    if message.text == "üö´ –û—Ç–º–µ–Ω–∏—Ç—å":
        """–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–¥—É–º–∞–ª –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª"""
        bot.send_message(message.from_user.id, "–î–∞–π—Ç–µ –∑–Ω–∞—Ç—å –µ—Å–ª–∏ –µ—â–µ —á—Ç–æ —Ç–æ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è", reply_markup=keyboardStart)
        bot.register_next_step_handler(message, get_message)
    else:
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –∏ –∑–∞–Ω—É–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö"""
        tz = pytz.timezone('Asia/Bangkok')
        now = datetime.datetime.now(tz)
        time_str = now.strftime('%Y-%m-%d %H:%M:%S')
        text = f"–í–æ–ø—Ä–æ—Å –≤ —á–∞—Ç —Å –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–º –æ—Ç {message.from_user.username}:\n<b>–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –≤–æ–ø—Ä–æ—Å–∞:</b> {time_str}\n<b>–í–æ–ø—Ä–æ—Å</b>:{message.text}\n\n–°—Å—ã–ª–∫–∞ –Ω–∞ –µ–≥–æ TG: https://t.me/{message.from_user.username}"
        bot.send_message(GROUPDIRECTOR, text, parse_mode='html')
        bot.send_message(message.from_user.id, "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç —Å –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–º", reply_markup=keyboardStart)
        bot.register_next_step_handler(message, get_message)



def question_educational_part(message):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª —É—á–µ–±–Ω–æ–π —á–∞—Å—Ç–∏"""
    if message.text == "üö´ –û—Ç–º–µ–Ω–∏—Ç—å":
        """–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–¥—É–º–∞–ª –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª"""
        bot.send_message(message.from_user.id, "–î–∞–π—Ç–µ –∑–Ω–∞—Ç—å –µ—Å–ª–∏ –µ—â–µ —á—Ç–æ —Ç–æ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è", reply_markup=keyboardStart)
        bot.register_next_step_handler(message, get_message)
    else:
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –∏ –∑–∞–Ω—É–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö"""
        tz = pytz.timezone('Asia/Bangkok')
        now = datetime.datetime.now(tz)
        time_str = now.strftime('%Y-%m-%d %H:%M:%S')
        text = f"–í–æ–ø—Ä–æ—Å –≤ —á–∞—Ç <b>—É—á–µ–±–Ω–æ–π —á–∞—Å—Ç–∏</b> –æ—Ç {message.from_user.username}:\n<b>–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –≤–æ–ø—Ä–æ—Å–∞:</b> {time_str}\n<b>–í–æ–ø—Ä–æ—Å</b>:{message.text}\n\n–°—Å—ã–ª–∫–∞ –Ω–∞ –µ–≥–æ TG: https://t.me/{message.from_user.username}"
        bot.send_message(GROUP_EDUCATIONAL, text, parse_mode='html')
        bot.send_message(message.from_user.id, "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç —É—á–µ–±–Ω–æ–π —á–∞—Å—Ç–∏", reply_markup=keyboardStart)
        bot.register_next_step_handler(message, get_message)

def question_selection_committee(message):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª –ø—Ä–∏–µ–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏"""
    if message.text == "üö´ –û—Ç–º–µ–Ω–∏—Ç—å":
        """–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–¥—É–º–∞–ª –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª"""
        bot.send_message(message.from_user.id, "–î–∞–π—Ç–µ –∑–Ω–∞—Ç—å –µ—Å–ª–∏ –µ—â–µ —á—Ç–æ —Ç–æ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è", reply_markup=keyboardStart)
        bot.register_next_step_handler(message, get_message)
    else:
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –∏ –∑–∞–Ω—É–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö"""
        tz = pytz.timezone('Asia/Bangkok')
        now = datetime.datetime.now(tz)
        time_str = now.strftime('%Y-%m-%d %H:%M:%S')
        text = f"–í–æ–ø—Ä–æ—Å –≤ —á–∞—Ç <b>–ø—Ä–∏–µ–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏</b> –æ—Ç {message.from_user.username}:\n<b>–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –≤–æ–ø—Ä–æ—Å–∞:</b> {time_str}\n<b>–í–æ–ø—Ä–æ—Å</b>:{message.text}\n\n–°—Å—ã–ª–∫–∞ –Ω–∞ –µ–≥–æ TG: https://t.me/{message.from_user.username}"
        bot.send_message(GROUP_EDUCATIONAL, text, parse_mode='html')
        bot.send_message(message.from_user.id, "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç –ø—Ä–∏–µ–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏", reply_markup=keyboardStart)
        bot.register_next_step_handler(message, get_message)




bot.set_my_commands([
    types.BotCommand("/start", "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞"),
    types.BotCommand("/help", "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è")
])


class Command(BaseCommand):

    help = 'Implemented to Django application telegram bot setup command'

    def handle(self, *args, **kwargs):
        print('RUN BOT . . .')
        bot.enable_save_next_step_handlers(delay=2)
        bot.load_next_step_handlers()
        bot.infinity_polling(none_stop=True)
        print('STOP BOT . . .')